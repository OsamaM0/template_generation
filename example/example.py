"""
Example script demonstrating how to use the Template Generator
"""
import os
import sys
import json

# Add the current directory to Python path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from ..generators.template_generator import TemplateGenerator

def example_usage():
    """Demonstrate various ways to use the template generator."""
    
    # Sample content (you can also load from file)
    sample_content = """
    qr code

OUT_OF_SCOPE

<!-- image -->

logo

OUT_OF_SCOPE

<!-- image -->

я║Чя╗Шя║к┘Е я╗Уя╗▓ ╪гя╗Чя║┤я║О┘Е ╪зя╗Яя╗дя║к ╪гя╗зя╗к я╗Чя║┤я╗дя║О┘Ж: ╪гя║╗я╗ая╗▓ ┘Ия╗Уя║оя╗Ля╗▓╪М ╪гя╗гя║О ╪зя╗Яя╗Шя║┤я╗в ╪зя╗╖┘И┘Д я╗Уя╗Шя║к ╪зя║│я║Шя║Тя║О┘Ж я╗Яя╗Ъ я╗Уя╗▓ ╪зя╗Яя║к╪▒╪│ ╪зя╗Яя║┤я║Оя║Ся╗Ц╪М ┘И╪гя╗гя║О ╪зя╗Яя╗Шя║┤я╗в ╪зя╗Яя║Ья║Оя╗зя╗▓ ┘А ┘Ия╗ля╗о ╪зя╗Яя╗Фя║оя╗Ля╗▓ ┘А я╗Уя╗мя╗о ╪гя╗зя╗о╪з╪╣╪М ╪г┘Ия╗Яя╗мя║О ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю.

remote sensing

OUT_OF_SCOPE

<!-- image -->

╪к╪╣╪▒┘К┘Б ╪з┘Д┘Е╪п ╪з┘Д┘Е╪к╪╡┘Д

. я║гя║о┘Б я╗гя║к ╪гя║Чя╗░ я║Ся╗Мя║к┘З я╗ля╗дя║░ я╗гя║Шя║╝я╗Ю я║Ся╗к я╗Уя╗▓ я╗Ыя╗ая╗дя║Ф ┘И╪зя║гя║к╪й : ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю я╗ля╗о

я╗Уя║┤я║Тя║Р ╪зя╗Яя╗дя║к я╗ля╗о ╪зя╗Яя╗мя╗дя║░ ╪зя╗╡я║Чя╗▓ я║Ся╗Мя║к я║гя║о┘Б ╪зя╗Яя╗дя║к╪М ┘Ия╗Яя╗мя║м╪з я║│я╗дя╗▓ )╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю(╪Ы я╗╗я║Чя║╝я║О┘Д ╪зя╗Яя╗мя╗дя║░ я║Ся║дя║о┘Б ╪зя╗Яя╗дя║к я╗Уя╗▓ . ( ) ┘И ( ) : я╗Ыя╗ая╗дя║Ф ┘И╪зя║гя║к╪й╪М я╗гя║Ья╗Ю

other

OUT_OF_SCOPE

<!-- image -->

╪н┌й┘З 4

я╗Ля╗ия║к я║Яя╗дя╗┤я╗К ╪зя╗Яя╗Шя║о╪з╪б. ╪зя╗Яя╗оя║Яя╗о╪и : я║гя╗Ья╗в ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю .( ┘Ия╗Яя╗мя║м╪з я╗│я║┤я╗дя╗░ я║С┘А )╪зя╗Яя╗дя║к ╪зя╗Яя╗о╪зя║Яя║Р

logo

OUT_OF_SCOPE

<!-- image -->

я╗Уя╗Фя╗┤я╗к ┘Ия║Яя╗к ╪вя║зя║о: ┘Ия╗ля╗о ╪зя╗╣я║╖я║Тя║О╪╣ ( j ) : я╗гя╗Шя║к╪з╪▒ я╗гя║к┘З: ╪зя╗Яя║Шя╗оя║│я╗В ╪г╪▒я║Ся╗К я║гя║оя╗Ыя║О╪к╪М ╪ея╗╗ ╪е╪░╪з я╗Ыя║Оя╗зя║Ц я╗ля╗дя║░я║Чя╗к я╗гя║Шя╗Дя║оя╗Уя║Ф я╗гя║Ья╗Ю я║│я║Ц я║гя║оя╗Ыя║О╪к╪Ы я╗╖я║Яя╗Ю ╪зя╗Яя╗оя╗Чя╗Т.

logo

OUT_OF_SCOPE

<!-- image -->

other

OUT_OF_SCOPE

<!-- image -->

┘Л

| ╪зя╗Яя║Шя╗оя║┐я╗┤я║в                                                                                           | ╪зя╗Яя╗дя║к я║гя║о┘Б   | ╪зя╗Яя╗дя║Шя║╝я╗Ю ╪зя╗Яя╗дя║к ╪зя╗Яя╗Ья╗ая╗дя║Ф я╗Гя║о┘Б   | ╪зя╗Яя╗дя║Шя║╝я╗Ю ╪зя╗Яя╗дя║к ╪зя╗Яя╗Ья╗ая╗дя║Ф ┘Ия║│я╗В   |   ┘Е |
|---------------------------------------------------------------------------------------------------|------------|--------------------------|--------------------------|-----|
| я║Яя║О╪б ╪зя╗Яя╗дя║к я║│я║Тя║Р я╗ля╗о ╪зя╗Яя║м┘К ╪зя╗Яя╗мя╗дя║░ ╪г┘Ж ╪зя╗╖я╗гя║Ья╗ая║Ф я╗ля║мя╗й я╗Уя╗▓ я╗зя║ая║к                                                   | ╪зя╗╖я╗Яя╗Т       | ( )                      | ( )                      |   ┘б |
| ┘И╪зя╗Яя╗┤я║О╪б╪Ы ┘И╪зя╗Яя╗о╪з┘И ╪зя╗╖я╗Яя╗Т ┘Ия╗ля╗▓ ╪зя╗Яя║Ья╗╝я║Ыя║Ф╪М ╪зя╗Яя╗дя║к я║Ся║дя║о┘И┘Б я╗гя║Шя║╝я╗╝┘Л я╗Уя╗▓ ╪зя╗Яя╗мя╗дя║░ я╗Ыя║О┘Ж ╪е╪░╪з я║гя║оя╗Ыя║О╪к ╪г╪▒я║Ся╗К я║Ся╗дя╗Шя║к╪з╪▒ я╗гя║кя╗ля║О ┘Ия║Яя║Р ┘Ия╗Яя║м╪з | ╪зя╗Яя╗о╪з┘И      | ( )                      | ( )                      |   ┘в |
| ┘Ия║╗я╗╝ я╗Уя╗┤я╗дя║к я╗Гя║оя╗Уя╗мя║О я╗Уя╗▓ ╪зя╗Яя╗мя╗дя║░ я╗Ыя║О┘Ж ╪е╪░╪з ┘И╪гя╗гя║О ╪зя╗Яя╗Ья╗ая╗дя║Ф╪М ┘Ия║│я╗В я║гя║оя╗Ыя║О╪к. ╪г┘Ия║│я║Ц ╪г╪▒я║Ся╗К я║О ┘Ия╗Чя╗Ф┘Л ┘Ия╗│я╗дя║к я║гя║оя╗Ыя║О╪к╪М ╪г╪▒я║Ся╗К         | ╪зя╗Яя╗┤я║О╪б      | ( )                      | ( )                      |   ┘г |

╪з┘Д╪┤╪з┘З╪п

┘В╪з┘Д ╪з┘Д╪┤┘К╪о ╪│┘Д┘К┘Е╪з┘Ж ╪з┘Д╪м┘О┘Е┘Т╪▓┘И╪▒┘К (┘б┘б):

other

OUT_OF_SCOPE

<!-- image -->

я╣╛

я╣╝

я╗│ я╣╕ я╗М я╣╢ я║к я╣║ я╗Ю я╣╛ ╪з я║С я╣║ я╗д я╣╕ я║Шя▒ая║╝ я╣╢ ╪░ я╣┤  ┘И я╣╢ я║Ф я╗а я╣╛ я╗д я╗У я╣║ я╗▓ я╗Ы

я╣╢

я╣║

я╣╛

я╣╝

я╣╛ я║к я╣╢  я╗г я╣╢ я║к я╣╛ я║░ я╣▓  я║С я╣╢я╗М я║О╪б я╣╢  я╗л я╣╢ я╗д ╪е я╣║ ┘Ж я╣╛  я║Я я╗У я╣╢ я╗о я╣╢ ╪зя║Я я╣║я║Р

я╣╢

я╣▓

logo

OUT_OF_SCOPE

<!-- image -->

other

OUT_OF_SCOPE

<!-- image -->

╪гя╗Чя║о╪г ╪зя╗╡я╗│я║Шя╗┤я╗ж ╪зя╗╡я║Чя╗┤я║Шя╗┤я╗ж╪М ┘И╪гя║│я║Шя║ия║о╪м я╗гя╗ия╗мя╗дя║О ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю╪М я╗гя║Тя╗┤ я▒в я╗и ┘Л я║О я║гя╗Ья╗дя╗к ┘Ия╗гя╗Шя║к╪з╪▒я╗й ┘Ия║│я║Тя║Тя╗к: : я╗Чя║О┘Д я║Чя╗Мя║Оя╗Яя╗░: . )┘б( 9

| я║│я║Тя║Тя╗к   | я╗гя╗Шя║к╪з╪▒я╗й   | я║гя╗Ья╗дя╗к   | ╪зя╗Яя╗дя║к я║гя║о┘Б   | ╪зя╗Яя╗Ья╗ая╗дя║Ф   |   ┘Е |
|--------|----------|--------|------------|----------|-----|
|        |          |        |            |          |   ┘б |
|        |          |        |            |          |   ┘в |
|        |          |        |            |          |   ┘г |
|        |          |        |            |          |   ┘д |
|        |          |        |            |          |   ┘е |
|        |          |        |            |          |   ┘ж |

╪гя╗Ля╗Дя╗▓ я╗Яя╗Ья╗Ю я║гя║о┘Б я╗гя╗ж я║гя║о┘И┘Б ╪зя╗Яя╗дя║к я╗гя║Ья║Оя╗Яя╗┤я╗ж я╗Уя╗┤я╗мя╗дя║О я╗гя║к я╗гя║Шя║╝я╗Ю╪М я╗гя║Тя╗┤я╗и ┘Л я║О я║гя╗Ья╗дя╗к ┘Ия╗гя╗Шя║к╪з╪▒я╗й:

other

OUT_OF_SCOPE

<!-- image -->

| я╗гя╗Шя║к╪з╪▒я╗й   | ╪зя╗Яя╗дя║к я║гя╗Ья╗в   | ╪зя╗Яя╗дя║к я║гя║о┘Б   |   ┘Е |
|----------|------------|------------|-----|
|          |            | ╪зя╗╖я╗Яя╗Т       |   ┘б |
|          |            | ╪зя╗Яя╗о╪з┘И      |   ┘в |
|          |            | ╪зя╗Яя╗┤я║О╪б      |   ┘г |
|          |            | ╪зя╗Яя╗┤я║О╪б      |   ┘г |

logo

OUT_OF_SCOPE

<!-- image -->

.( )┘б( ╪зя╗╖я║гя║░╪з╪и )┘е┘е-┘ж┘е

яА│

я╗зя║╕я║О╪╖

╪гя║┐я╗К ╪п╪зя║Ля║о╪й я║гя╗о┘Д ╪зя╗╣я║Яя║Оя║Ся║Ф ╪зя╗Яя║╝я║дя╗┤я║дя║Ф я╗гя╗дя║О я╗│я║Дя║Чя╗▓:

я║Чя╗дя║к я║Ся╗дя╗Шя║к╪з╪▒ :

( ) )╪г╪▒я║Ся╗К ╪г┘И я║│я║Ц я║гя║оя╗Ыя║О╪к( )я║│я║Ц я║гя║оя╗Ыя║О╪к( )╪г╪▒я║Ся╗К я║гя║оя╗Ыя║О╪к( )я║гя║оя╗Ыя║Шя╗┤я╗ж(

╪г ┘А я╗Ыя╗ая╗дя║Ф

: я╗Ля╗ия║к ╪зя╗Яя╗оя╗Чя╗Т я╗Ля╗ая╗┤я╗мя║О я║Чя╗дя║к я║Ся╗дя╗Шя║к╪з╪▒ ( ) ╪и ┘А я╗Ыя╗ая╗дя║Ф )╪г╪▒я║Ся╗К ╪г┘И я║│я║Ц я║гя║оя╗Ыя║О╪к( )я║│я║Ц я║гя║оя╗Ыя║О╪к( )╪г╪▒я║Ся╗К я║гя║оя╗Ыя║О╪к( )я║гя║оя╗Ыя║Шя╗┤я╗ж(

я╗Уя╗▓ я║гя║Оя╗Яя║Ф ╪зя╗Яя╗оя║╗я╗Ю я║Чя╗дя║к я║Ся╗дя╗Шя║к╪з╪▒ : ( ) ╪м ┘А я╗Ыя╗ая╗дя║Ф )╪г╪▒я║Ся╗К ╪г┘И я║│я║Ц я║гя║оя╗Ыя║О╪к( )я║│я║Ц я║гя║оя╗Ыя║О╪к( )╪г╪▒я║Ся╗К я║гя║оя╗Ыя║О╪к( )я║гя║оя╗Ыя║Шя╗┤я╗ж(

logo

OUT_OF_SCOPE

<!-- image -->

╪г┘Ия╗╗┘Л: ╪зя╗Яя║Шя╗Дя║Тя╗┤я╗Ц я╗Ля╗ая╗░ я╗Ыя╗ая╗дя║О╪к я╗гя╗Фя║о╪п╪й :

: я╗│я╗Шя║о╪г я╗Ыя╗Ю я╗Гя║Оя╗Яя║Р ╪зя╗Яя╗Ья╗ая╗дя║О╪к ╪зя╗╡я║Чя╗┤я║Ф я╗гя╗Дя║Тя╗Ш ┘Ля║О ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю

other

OUT_OF_SCOPE

<!-- image -->

┘И┘И╪▒╪в╪и┘З┘Е

## ┘Л я║О: ╪зя╗Яя║Шя╗Дя║Тя╗┤я╗Ц я╗Ля╗ая╗░ ╪зя╗╡я╗│я║О╪к : я║Ыя║Оя╗зя╗┤

я╗│я╗Шя║о╪г ╪зя╗Яя╗Дя╗╝╪и ╪зя╗╡я╗│я║О╪к ╪зя╗╡я║Чя╗┤я║Ф я╗гя╗Дя║Тя╗Шя╗┤я╗ж ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю╪М я╗гя╗К я╗гя║о╪зя╗Ля║О╪й я╗гя║к ╪зя╗Яя║дя║о┘Б ╪зя╗Яя║м┘К я║Ся╗Мя║кя╗й я╗ля╗дя║░╪й я╗Уя╗▓ ┘Ия║│я╗В ╪зя╗Яя╗Ья╗ая╗дя║Ф я║Ся╗дя╗Шя║к╪з╪▒ ╪г╪▒я║Ся╗К я║гя║оя╗Ыя║О╪к я╗Уя╗Шя╗В╪М ┘И╪зя╗Яя║м┘К я║Ся╗Мя║кя╗й я╗ля╗дя║░╪й я╗гя║Шя╗Дя║оя╗Уя║Ф я║Ся║Оя╗Яя╗оя║Яя╗мя╗┤я╗ж: ╪зя╗Яя║Шя╗оя║│я╗В ╪г╪▒я║Ся╗К я║гя║оя╗Ыя║О╪к╪М ┘И╪зя╗╣я║╖я║Тя║О╪╣ я║│я║Ц я║гя║оя╗Ыя║О╪к .

logo

OUT_OF_SCOPE

<!-- image -->

: я╗Чя║О┘Д  я║Чя╗Мя║Оя╗Яя╗░: . ( )┘б 9 ┘б┘ж┘в ┘б┘ж┘г ┘Е┘Ж ┘И╪з┘Д╪│╪н╪з╪и ┘И╪к╪╡╪▒┘К┘Б ╪в┘Д╪и╪н╪▒ ╪п╪в╪и╪й

screenshot

OUT_OF_SCOPE

<!-- image -->

)┘б( я╗Ля║о я▒в ┘Б ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю. )┘в( я╗гя║О я║гя╗Ья╗в ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю╪Я ┘Ия╗гя║О я╗гя╗Шя║к╪з╪▒ я╗гя║к я╣╝ ┘З╪Я )┘г( ╪зя╗Чя║о╪г ╪зя╗╡я╗│я║О╪к ╪зя╗Яя╗Ья║оя╗│я╗дя║Ф ╪зя╗╡я║Чя╗┤я║Ф я║Яя╗мя║о я╣░ ╪з╪М я║Ыя╗в ╪зя║│я║Шя║ия║о╪м ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю╪М ┘Ия║С я╣╢ ┘Ая╗┤ я▒в я╗ж я║гя╗Ья╗дя╗к╪М ┘Ия╗гя╗Шя║к╪з╪▒ я╗г я╣╢ я║к я▒в ┘З: : : ┘б┘А┘А  я╗Чя║О┘Д  я║Чя╗Мя║Оя╗Яя╗░ . ( )┘в 9 : : ┘в┘А┘А я╗Чя║О┘Д я║Чя╗Мя║Оя╗Яя╗░ . ( )┘г 9 . ( )┘д 9 : : ┘г┘А┘А я╗Чя║О┘Д я║Чя╗Мя║Оя╗Яя╗░

)┘д( я║│я║а я▒в я╗Ю я╗гя╗ж я║гя╗Фя╗Ия╗Ъ я║Ыя╗╝я║Ыя║Ф ╪гя╗гя║Ья╗ая║Ф я╗Яя╗ая╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю я╗гя║Тя╗┤я╗ия╣░я║О я║гя╗Ья╗дя╗к ┘Ия╗гя╗Шя║к╪з╪▒ я╗г я╣╢ я║к я▒в ┘З.

.( )┘б( ╪зя╗Яя║Тя╗Шя║о╪й )┘б┘ж┘б-┘д┘ж┘б

logo

OUT_OF_SCOPE

<!-- image -->

## ┘Е╪╣┘Д┘И┘Е╪з╪к ╪е╪л╪▒╪з╪ж┘К╪й

┘Д┘Д┘Е╪п ╪з┘Д┘Е╪к╪╡┘Д ╪╣╪п╪й ╪г╪│┘Е╪з╪б╪М ┘Е┘Ж┘З╪з: (┘Е╪п ╪з┘Д┘Ж┘С┘П┘Ж┘С┘О╪й)╪Ы ┘Д╪г┘Ж ╪з┘Д┘Г┘Д┘Е╪й ┘Б┘К┘З╪з ╪и┘Ж┘К╪к ╪╣┘Д┘Й ╪з┘Д┘Е╪п╪М ┘И┘К╪│┘Е┘Й ╪и┘А(╪з┘Д┘Е╪п ╪з┘Д┘Е┘П┘Е┘Г┘Ж)╪Ы ┘Д╪г┘Ж ╪з┘Д┘В╪з╪▒╪ж ┘Д╪з ┘К╪к┘Е┘Г┘Ж ┘Е┘Ж ╪к╪н┘В┘К┘В ╪з┘Д┘З┘Е╪▓╪й ╪к╪н┘В┘К┘В┘Л╪з ┘Е╪н┘Г┘Е┘Л╪з ╪е┘Д╪з ╪и┘З╪М ┘И┘К╪│┘Е┘Й ╪и┘А(┘Е╪п ╪з┘Д┘Г┘Д┘Е╪й)╪Ы ┘Д╪г┘Ж ╪н╪▒┘Б ╪з┘Д┘Е╪п ┘И╪з┘Д┘З┘Е╪▓╪й ┘Б┘К ┘Г┘Д┘Е╪й ┘И╪з╪н╪п╪й.

тЧД ┘В╪з┘Д ╪з┘Д╪е┘Е╪з┘Е ╪з╪и┘Ж ╪з┘Д╪м╪▓╪▒┘К ┘и┘и ┘Б┘К ┘Г╪к╪з╪и┘З ╪з┘Д┘Ж╪┤╪▒ ┘Б┘К ╪з┘Д┘В╪▒╪з╪б╪з╪к ╪з┘Д╪╣╪┤╪▒ ┘Б┘К ┘В╪╡╪▒ ╪з┘Д┘Е╪п ╪з┘Д┘Е╪к╪╡┘Д: (┘И┘В╪п ╪к╪к╪и╪╣╪к┘З ┘Б┘Д┘Е ╪г╪м╪п┘З ┘Б┘К ┘В╪▒╪з╪б╪й ╪╡╪н┘К╪н╪й ┘И┘Д╪з ╪┤╪з╪░╪й)(┘б).

)┘б( ╪зя╗Яя╗ия║╕я║о я╗Уя╗▓ ╪зя╗Яя╗Шя║о╪б╪з╪к ╪зя╗Яя╗Мя║╕я║о╪М я║╖я╗дя║▓ ╪зя╗Яя║кя╗│я╗ж я╗гя║дя╗дя║к я║Ся╗ж ╪зя│Йя║░╪▒┘К ╪м ┘б ╪╡ ┘е┘б┘г.

logo

OUT_OF_SCOPE

<!-- image -->
    """
    
    # Learning goals
    sample_goals = [
        "я╗│я╗Шя║о╪г я╗Ыя╗Ю я╗Гя║Оя╗Яя║Р ╪зя╗Яя╗Ья╗ая╗дя║О╪к ╪зя╗╡я║Чя╗┤я║Ф я╗гя╗Дя║Тя╗Ш ┘Ля║О ╪зя╗Яя╗дя║к ╪зя╗Яя╗дя║Шя║╝я╗Ю"
    ]
    
    print("ЁЯЪА Template Generator Example")
    print("=" * 40)
    
    try:
        # Initialize generator
        generator = TemplateGenerator()
        
        # Example 1: Generate Goal-Based Question Bank
        print("\nЁЯУЭ Generating Goal-Based Question Bank...")
        questions = generator.generate_goal_based_questions(
            content=sample_content,
            goals=sample_goals,
            question_counts={
                "multiple_choice": 2,
                "short_answer": 2,
                "complete": 2,
                "true_false": 2
            },
            difficulty_levels=[1, 2]
        )
        
        print("тЬЕ Goal-Based Question Bank Generated!")
        
        # Print detailed information about the goal-based results
        if '_goal_based_metadata' in questions:
            metadata = questions['_goal_based_metadata']
            print(f"   Total Goals: {metadata['total_goals']}")
            print(f"   Total Questions: {metadata['total_questions']}")
            print(f"   Questions per Goal: {metadata['questions_per_goal_distribution']}")
        
        print(f"   Multiple Choice: {len(questions['multiple_choice'])}")
        print(f"   Short Answer: {len(questions['short_answer'])}")
        print(f"   Complete: {len(questions['complete'])}")
        print(f"   True/False: {len(questions['true_false'])}")
        
        # Show goal-question mapping
        if 'goal_question_mapping' in questions:
            print("\nЁЯОп Goal-Question Mapping:")
            for mapping in questions['goal_question_mapping']:
                print(f"   тАв {mapping['goal_text'][:50]}... -> {mapping['question_count']} questions")
                types = mapping['question_types']
                print(f"     MC: {types['multiple_choice']}, SA: {types['short_answer']}, "
                      f"Comp: {types['complete']}, TF: {types['true_false']}")
        
        # Example 2: Generate Worksheet
        print("\nЁЯУЛ Generating Worksheet...")
        worksheet = generator.generate_worksheet(
            content=sample_content,
            goals=sample_goals
        )
        
        print("тЬЕ Worksheet Generated!")
        print(f"   Goals: {len(worksheet['goals'])}")
        print(f"   Applications: {len(worksheet['applications'])}")
        print(f"   Vocabulary: {len(worksheet['vocabulary'])}")
        print(f"   Guidelines: {len(worksheet['teacher_guidelines'])}")
        
        # Example 3: Generate Summary
        print("\nЁЯУД Generating Summary...")
        summary = generator.generate_summary(content=sample_content)
        
        print("тЬЕ Summary Generated!")
        print(f"   Opening: {summary['opening'][:50]}...")
        print(f"   Summary: {summary['summary'][:50]}...")
        print(f"   Ending: {summary['ending'][:50]}...")
        
        # Example 4: Generate Mind Map (NEW!)
        print("\nЁЯза Generating Mind Map...")
        mindmap = generator.generate_mindmap(content=sample_content)
        
        print("тЬЕ Mind Map Generated!")
        print(f"   Nodes: {len(mindmap.get('nodeDataArray', []))}")
        print(f"   Model Class: {mindmap.get('class', 'N/A')}")
        if mindmap.get('nodeDataArray'):
            root_node = next((node for node in mindmap['nodeDataArray'] if node.get('parent') is None), {})
            print(f"   Root Topic: {root_node.get('text', 'N/A')}")
            main_branches = [node for node in mindmap['nodeDataArray'] if node.get('parent') == root_node.get('key', 0)]
            print(f"   Main Branches: {len(main_branches)}")
        
        # Save examples to files
        print("\nЁЯТ╛ Saving examples to files...")
        
        with open("example_questions.json", "w", encoding="utf-8") as f:
            json.dump(questions, f, ensure_ascii=False, indent=2)
        
        with open("example_worksheet.json", "w", encoding="utf-8") as f:
            json.dump(worksheet, f, ensure_ascii=False, indent=2)
        
        with open("example_summary.json", "w", encoding="utf-8") as f:
            json.dump(summary, f, ensure_ascii=False, indent=2)
        
        with open("example_mindmap.json", "w", encoding="utf-8") as f:
            json.dump(mindmap, f, ensure_ascii=False, indent=2)
        
        with open("example_summary.json", "w", encoding="utf-8") as f:
            json.dump(summary, f, ensure_ascii=False, indent=2)
        
        with open("example_mindmap.json", "w", encoding="utf-8") as f:
            json.dump(mindmap, f, ensure_ascii=False, indent=2)
        
        print("тЬЕ Examples saved successfully!")
        print("   - example_questions.json")
        print("   - example_worksheet.json") 
        print("   - example_summary.json")
        print("   - example_mindmap.json")
        
    except Exception as e:
        print(f"тЭМ Error: {str(e)}")
        print("\nЁЯТб Make sure to:")
        print("   1. Install requirements: pip install -r requirements.txt")
        print("   2. Set your OPENAI_API_KEY environment variable")
        print("   3. Check your internet connection")

if __name__ == "__main__":
    example_usage()
